{
    "AWSTemplateFormatVersion": "2010-09-09",

    "Description": "This template uses embedded templates to build a Drupal installation with an RDS backend.",

    "Parameters": {
        "KeyName": {
            "Type": "String",
            "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the web server"
        },
        "PuppetClientSecurityGroup": {
            "Description" : "The EC2 security group for the instances",
            "Type": "String"
        },
        "PuppetMasterDNSName": {
            "Description" : "The PuppetMaster DNS name",
            "Type": "String"
        },
        "InstanceType" : {
            "Description" : "WebServer EC2 instance type",
            "Type" : "String",
            "Default" : "t2.micro",
            "AllowedValues" : [ "t1.micro","t2.micro","m1.small","m1.medium","m1.large","m1.xlarge","m2.xlarge","m2.2xlarge","m2.4xlarge","m3.xlarge","m3.2xlarge","c1.medium","c1.xlarge","cc1.4xlarge","cc2.8xlarge","cg1.4xlarge"],
            "ConstraintDescription" : "must be a valid EC2 instance type."
        },
        "DatabaseType": {
            "Default": "db.m1.small",
            "Description" : "The database instance type",
            "Type": "String",
            "AllowedValues" : [ "db.m1.small", "db.m1.large", "db.m1.xlarge", "db.m2.xlarge", "db.m2.2xlarge", "db.m2.4xlarge" ],
            "ConstraintDescription" : "must be a valid RDS DB Instance type."
        },
        "DatabaseUser": {
            "Default" : "admin",
            "NoEcho": "true",
            "Type": "String",
            "Description" : "Test database admin account name",
            "MinLength": "1",
            "MaxLength": "16",
            "AllowedPattern" : "[a-zA-Z][a-zA-Z0-9]*",
            "ConstraintDescription" : "must begin with a letter and contain only alphanumeric characters."
        },
        "DatabasePassword": {
            "Default" : "admin1234",
            "NoEcho": "true",
            "Type": "String",
            "Description" : "Test database admin account password",
            "MinLength": "1",
            "MaxLength": "41",
            "AllowedPattern" : "[a-zA-Z0-9]*",
            "ConstraintDescription" : "must contain only alphanumeric characters."
        },
        "OperatorEmail": {
            "Description": "EMail address to notify if there are operational issues",
            "Type": "String"
        },
        "SSHLocation" : {
            "Description" : " The IP address range that can be used to SSH to the EC2 instances",
            "Type": "String",
            "MinLength": "9",
            "MaxLength": "18",
            "Default": "0.0.0.0/0",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
        },
        "BucketName" : {
            "Description" : "The name of the bucket on which the CFN templates can be found.",
            "Type": "String"
        }
    },

    "Resources" : {

        "AlarmTopic" : {
            "Type" : "AWS::SNS::Topic",
            "Properties" : {
                "Subscription" : [ { "Endpoint" : { "Ref": "OperatorEmail" }, "Protocol" : "email" } ]
            }
        },

        "EC2SecurityGroup" : {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
                "GroupDescription" : "Open up SSH and HTTP access",
                "SecurityGroupIngress" : [
                    {"IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : { "Ref" : "SSHLocation"}},
                    {"IpProtocol": "tcp", "FromPort": "80", "ToPort": "80", "CidrIp": "0.0.0.0/0"}
                ]
            }
        },

        "WebServer" : {
            "Type" : "AWS::CloudFormation::Stack",
            "Metadata" : {
                "Puppet" : {
                    "roles"    : [ "drupal" ],
                    "host"     : { "Fn::GetAtt" : [ "AppDatabase", "Outputs.DBAddress" ] },
                    "database" : "drupal",
                    "user"     : {"Ref" : "DatabaseUser"},
                    "password" : {"Ref" : "DatabasePassword" }
                }
            },
            "Properties" : {
                "TemplateURL" : { "Fn::Join" : ["/", ["https://s3.amazonaws.com", { "Ref": "BucketName" }, "puppet-client.template"]] },
                "Parameters" : {
                    "KeyName"                   : { "Ref" : "KeyName" },
                    "InstanceType"              : { "Ref" : "InstanceType"},
                    "EC2SecurityGroup"          : { "Fn::GetAtt" : [ "EC2SecurityGroup", "GroupId" ] },
                    "PuppetClientSecurityGroup" : { "Ref" : "PuppetClientSecurityGroup" },
                    "PuppetMasterDNSName"       : { "Ref" : "PuppetMasterDNSName" },
                    "StackNameOrId"             : { "Ref" : "AWS::StackId" },
                    "ResourceName"              : "WebServer",
                    "BucketName"                : { "Ref" : "BucketName" }
                }
            }
        },

        "AppDatabase" : {
            "Type" : "AWS::CloudFormation::Stack",
            "Metadata" : {
                "Comment" : "Application database."
            },
            "Properties" : {
                "TemplateURL" : { "Fn::Join" : ["/", ["https://s3.amazonaws.com", { "Ref": "BucketName" }, "RDS_MySQL_55.template"]] },
                "Parameters" : {
                    "DBName"           : "drupal",
                    "DBUser"           : { "Ref" : "DatabaseUser" },
                    "DBPassword"       : { "Ref" : "DatabasePassword" },
                    "DBInstanceClass"  : { "Ref" : "DatabaseType" },
                    "AlarmTopic"       : { "Ref" : "AlarmTopic" },
                    "EC2SecurityGroup" : { "Ref" : "EC2SecurityGroup" },
                    "MultiAZ"          : "false"
                }
            }
        }
    },

    "Outputs": {
        "URL": {
            "Value": { "Fn::Join" : ["", [ "http://", { "Fn::GetAtt": [ "WebServer", "Outputs.ServerDNSName" ] }, "/" ]]},
            "Description" : "URL of the website"
        }
    }
}
