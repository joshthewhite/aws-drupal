{
    "AWSTemplateFormatVersion" : "2010-09-09",

    "Description": "Brings up a Puppet Master to provision a set of Drupal servers.",

    "Parameters" : {
        "InstanceType" : {
            "Description" : "WebServer EC2 instance type",
            "Type" : "String",
            "Default" : "t2.micro",
            "AllowedValues" : [ "t1.micro","t2.micro","m1.small","m1.medium","m1.large","m1.xlarge","m2.xlarge","m2.2xlarge","m2.4xlarge","m3.xlarge","m3.2xlarge","c1.medium","c1.xlarge","cc1.4xlarge","cc2.8xlarge","cg1.4xlarge"],
            "ConstraintDescription" : "must be a valid EC2 instance type."
        },
        "KeyName" : {
            "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the PuppetMaster",
            "Type" : "String"
        },
        "ContentManifest" : {
            "Default" : "/drupal/: { include drupal }",
            "Description" : "Manifest of roles to add to nodes.pp",
            "Type" : "String"
        },
        "BucketName" : {
            "Description" : "The name of the S3 bucket containing the puppet configuration files.",
            "Type" : "String"
        }
    },

    "Mappings" : {
        "AWSInstanceType2Arch" : {
            "t1.micro"    : { "Arch" : "64" },
            "t2.micro"    : { "Arch" : "64HVM" },
            "m1.small"    : { "Arch" : "64" },
            "m1.medium"   : { "Arch" : "64" },
            "m1.large"    : { "Arch" : "64" },
            "m1.xlarge"   : { "Arch" : "64" },
            "m2.xlarge"   : { "Arch" : "64" },
            "m2.2xlarge"  : { "Arch" : "64" },
            "m2.4xlarge"  : { "Arch" : "64" },
            "m3.xlarge"   : { "Arch" : "64" },
            "m3.2xlarge"  : { "Arch" : "64" },
            "c1.medium"   : { "Arch" : "64" },
            "c1.xlarge"   : { "Arch" : "64" },
            "cc1.4xlarge" : { "Arch" : "64HVM" },
            "cc2.8xlarge" : { "Arch" : "64HVM" },
            "cg1.4xlarge" : { "Arch" : "64HVM" }
        },

        "AWSRegionArch2AMI" : {
            "us-east-1"      : { "32" : "ami-54807d3c", "64" : "ami-1b814f72", "64HVM" : "ami-76817c1e" },
            "us-west-2"      : { "32" : "ami-38fe7308", "64" : "ami-30fe7300", "64HVM" : "ami-d13845e1" },
            "us-west-1"      : { "32" : "ami-11d68a54", "64" : "ami-1bd68a5e", "64HVM" : "ami-f0d3d4b5" },
            "eu-west-1"      : { "32" : "ami-973b06e3", "64" : "ami-953b06e1", "64HVM" : "ami-892fe1fe" },
            "ap-southeast-1" : { "32" : "ami-b4b0cae6", "64" : "ami-beb0caec", "64HVM" : "ami-a6b6eaf4" },
            "ap-southeast-2" : { "32" : "ami-b3990e89", "64" : "ami-bd990e87", "64HVM" : "ami-d9fe9be3" },
            "ap-northeast-1" : { "32" : "ami-0644f007", "64" : "ami-0a44f00b", "64HVM" : "ami-29dc9228" },
            "sa-east-1"      : { "32" : "ami-3e3be423", "64" : "ami-3c3be421", "64HVM" : "ami-c9e649d4" }
        }
    },

    "Resources" : {

        "PuppetMasterInstance" : {
            "Type" : "AWS::EC2::Instance",
            "Metadata" : {
                "AWS::CloudFormation::Init" : {
                    "config" : {
                        "packages" : {
                            "yum" : {
                                "puppet"        : [],
                                "puppet-server" : [],
                                "ruby-devel"    : [],
                                "gcc"           : [],
                                "make"          : [],
                                "rubygems"      : []
                            },
                            "rubygems" : {
                                "json"          : [],
                                "facter"        : []
                            }
                        },
                        "sources" : {
                            "/etc/puppet" : { "Fn::Join" : ["/", ["https://s3.amazonaws.com", { "Ref": "BucketName" }, "drupal-puppet-config.zip"]] }
                        },
                        "files" : {
                            "/etc/yum.repos.d/epel.repo" : {
                                "source" : { "Fn::Join" : ["/", ["https://s3.amazonaws.com", { "Ref": "BucketName" }, "enable-epel-on-amazon-linux-ami"]] },
                                "mode"   : "000644",
                                "owner"  : "root",
                                "group"  : "root"
                            },
                            "/etc/puppet/autosign.conf" : {
                                "content" : "*.internal\n",
                                "mode"    : "100644",
                                "owner"   : "root",
                                "group"   : "wheel"
                            },
                            "/etc/puppet/fileserver.conf" : {
                                "content" : "[modules]\n   allow *.internal\n",
                                "mode"    : "100644",
                                "owner"   : "root",
                                "group"   : "wheel"
                            },
                            "/etc/puppet/puppet.conf" : {
                                "content" : { "Fn::Join" : ["", [
                                    "[main]\n",
                                    "   logdir=/var/log/puppet\n",
                                    "   rundir=/var/run/puppet\n",
                                    "   ssldir=$vardir/ssl\n",
                                    "   pluginsync=true\n",
                                    "[agent]\n",
                                    "   classfile=$vardir/classes.txt\n",
                                    "   localconfig=$vardir/localconfig\n"]] },
                                "mode"    : "000644",
                                "owner"   : "root",
                                "group"   : "root"
                            },
                            "/etc/puppet/modules/cfn/manifests/init.pp" : {
                                "content" : "class cfn {}",
                                "mode"    : "100644",
                                "owner"   : "root",
                                "group"   : "wheel"
                            },
                            "/etc/puppet/modules/cfn/lib/facter/cfn.rb" : {
                                "source"  : { "Fn::Join" : ["/", ["https://s3.amazonaws.com", { "Ref": "BucketName" }, "cfn-facter-plugin.rb"]] },
                                "mode"    : "100644",
                                "owner"   : "root",
                                "group"   : "wheel"
                            },
                            "/etc/puppet/manifests/nodes.pp" : {
                                "content" : {"Fn::Join" : ["", [
                                    "node basenode {\n",
                                    "  include cfn\n",
                                    "}\n",
                                    "node /^.*internal$/ inherits basenode {\n",
                                    "  case $cfn_roles {\n",
                                    "    ", { "Ref" : "ContentManifest" }, "\n",
                                    "  }\n",
                                    "}\n"]]},
                                "mode"    : "100644",
                                "owner"   : "root",
                                "group"   : "wheel"
                            },
                            "/etc/puppet/manifests/site.pp" : {
                                "content" : "import \"nodes\"\n",
                                "mode"    : "100644",
                                "owner"   : "root",
                                "group"   : "wheel"
                            }
                        },
                        "services" : {
                            "sysvinit" : {
                                "puppetmaster" : {
                                    "enabled" : "true",
                                    "ensureRunning" : "true"
                                }
                            }
                        }
                    }
                }
            },
            "Properties" : {
                "InstanceType" : { "Ref" : "InstanceType" },
                "SecurityGroups" : [ { "Ref" : "PuppetGroup" } ],
                "ImageId" : { "Fn::FindInMap" : [ "AWSRegionArch2AMI", { "Ref" : "AWS::Region" },
                    { "Fn::FindInMap" : [ "AWSInstanceType2Arch", { "Ref" : "InstanceType" }, "Arch" ] } ] },
                "KeyName" : { "Ref" : "KeyName" },
                "Tags": [ { "Key" : "Name", "Value": "Puppet Master" } ],
                "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
                    "#!/bin/bash\n",
                    "yum update -y aws-cfn-bootstrap\n",
                    "yum -y install openssl\n",

                    "/opt/aws/bin/cfn-init --region ", { "Ref" : "AWS::Region" },
                    "    -s ", { "Ref" : "AWS::StackId" }, " -r PuppetMasterInstance -v ",
                    "\n",
                    "/opt/aws/bin/cfn-signal -e $? '", { "Ref" : "PuppetMasterWaitHandle" }, "'\n"
                ]]}}
            }
        },

        "EC2SecurityGroup" : {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
                "GroupDescription" : "Group for clients to communicate with Puppet Master"
            }
        },

        "PuppetGroup" : {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
                "GroupDescription" : "Group for puppet communication",
                "SecurityGroupIngress" : [
                    { "IpProtocol" : "tcp", "FromPort" : "8140", "ToPort" : "8140", "SourceSecurityGroupName" : { "Ref" : "EC2SecurityGroup" }},
                    {"IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : "0.0.0.0/0"}
                ]
            }
        },

        "PuppetMasterWaitHandle" : {
            "Type" : "AWS::CloudFormation::WaitConditionHandle"
        },

        "PuppetMasterWaitCondition" : {
            "Type" : "AWS::CloudFormation::WaitCondition",
            "DependsOn" : "PuppetMasterInstance",
            "Properties" : {
                "Handle" : { "Ref" : "PuppetMasterWaitHandle" },
                "Timeout" : "600"
            }
        }
    },

    "Outputs" : {
        "PuppetMasterDNSName" : {
            "Value" : { "Fn::GetAtt" : [ "PuppetMasterInstance", "PrivateDnsName" ] },
            "Description" : "DNS Name of PuppetMaster"
        },
        "PuppetClientSecurityGroup" : {
            "Value" : { "Fn::GetAtt" : [ "EC2SecurityGroup", "GroupId" ] },
            "Description" : "Clients of the Puppet Master should be part of this security group"
        }
    }
}
